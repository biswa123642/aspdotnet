@import "vars";


/* breakpoints */

$break-desktop: 992px;
$break-all-mobile: 991px;
$break-mobile: 380px;
$break-tab: 768px;
$break-sm-device:576px;
$break-mobile-horizontal-down: 639px;
$break-mobile-horizontal: 640px;
$break-mobile-large: 786px;
$break-tab-horizontal: 1024px;
$large-desktop: 1220px;
$extra-large-desktop:1600px;
@mixin wrapper() {
  max-width: 991px;
  margin: 0 auto !important;
}
@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}
@mixin headings($from: 1, $to: 6) {
  @for $i from $from through $to {
    h#{$i} {
      @content;
    }
  }
}
@mixin font-size($sizeValue: 1.6) {
  font-size: $sizeValue + rem;
}


@mixin loading-gif() {
  background-image: url(data:image/svg+xml;charset=utf-8;base64,PHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHZpZXdCb3g9IjAgMCAzMiAzMiIgd2lkdGg9IjMyIiBoZWlnaHQ9IjMyIiBmaWxsPSJibGFjayI+DQogIDxwYXRoICBvcGFjaXR5PSIuMjUiIGQ9Ik0xNiAwIEExNiAxNiAwIDAgMCAxNiAzMiBBMTYgMTYgMCAwIDAgMTYgMCBNMTYgNCBBMTIgMTIgMCAwIDEgMTYgMjggQTEyIDEyIDAgMCAxIDE2IDQiLz4NCiAgPHBhdGggZmlsbD0nIzFhODBiNicgZD0iTTE2IDAgQTE2IDE2IDAgMCAxIDMyIDE2IEwyOCAxNiBBMTIgMTIgMCAwIDAgMTYgNHoiPg0KICAgIDxhbmltYXRlVHJhbnNmb3JtIGF0dHJpYnV0ZU5hbWU9InRyYW5zZm9ybSIgdHlwZT0icm90YXRlIiBmcm9tPSIwIDE2IDE2IiB0bz0iMzYwIDE2IDE2IiBkdXI9IjAuOHMiIHJlcGVhdENvdW50PSJpbmRlZmluaXRlIiAvPg0KICA8L3BhdGg+DQo8L3N2Zz4NCg==);
  background-position: center center;
  background-repeat: no-repeat;
}
@mixin respond-to($media) {
  @if $media==mobile {
    @media only screen and (max-width: $break-mobile) {
      @content;
    }
  } @else if $media==mobile-horizontal {
    @media only screen and (max-width: $break-mobile-horizontal-down) {
      @content;
    }
  } @else if $media==mobile-large {
    @media only screen and (max-width: $break-mobile-large) {
      @content;
    }
  } @else if $media==tablet {
    @media only screen and (min-width: ($break-mobile + 1)) and (max-width: ($break-desktop - 1)) {
      @content;
    }
  } @else if $media==all-mobile {
    @media only screen and (max-width: $break-all-mobile) {
      @content;
    }
  }@else if $media==sm-mobile {
    @media only screen and (min-width: $break-sm-device) {
      @content;
    }
  }
   @else if $media==tab {
    @media only screen and (min-width: ($break-tab)) {
      @content;
    }
  } @else if $media==mob-horizontal {
    @media only screen and (min-width: $break-mobile-horizontal) {
      @content;
    }
  } @else if $media==tab-horizontal {
    @media only screen and (min-width: $break-tab-horizontal) {
      @content;
    }
  } @else if $media==desktop {
    @media only screen and (min-width: $break-desktop) {
      @content;
    }
  } @else if $media==large-desktop {
    @media only screen and (min-width: $large-desktop) {
      @content;
    }
  }@else if $media==extra-large-desktop {
    @media only screen and (min-width: $extra-large-desktop) {
      @content;
    }
  } @else if $media==below-tab {
    @media only screen and (max-width: 1023px) {
      @content;
    }
  } @else if $media==bootstrap-onlyMobile {
    @media only screen and (max-width: 767px) {
      @content;
    }
  } @else if $media==bootstrap-onlyTablet {
    @media only screen and (min-width: 768px) and (max-width: 1199px) {
      @content;
    }
  } @else if $media==bootstrap-mediumTablet {
    @media only screen and (min-width: 768px) and (max-width: 991px) {
      @content;
    }
  } @else if $media==bootstrap-onlyDesktop {
    @media only screen and (min-width: 1023px) {
      @content;
    }
  } @else if $media==bootstrap-tabDesktop {
    @media screen and (min-width: 768px) {
      @content;
    }
  } @else if $media==bootstrap-lgDesktop {
    @media screen and (min-width: 992px) {
      @content;
    }
  }
}

//px to rem converter.
// use font-size: rem(14);
@function rem($pxValue) {
  @return #{($pxValue) * 0.1}rem;
}

// font-family for  central.com
@mixin nunito-sans() {
  font-family: 'nunito-sans', sans-serif;
}

